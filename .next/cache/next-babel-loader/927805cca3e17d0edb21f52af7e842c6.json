{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nimport { useRouter } from \"next/router\"; // import fs from \"fs\";\n\nimport util from \"util\";\nimport getConfig from \"next/config\";\nconst {\n  serverRuntimeConfig\n} = getConfig();\n\nfunction shuffle(a) {\n  let j, x, i;\n\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n}\n\nfunction topThreeImages(imgGroup) {\n  let urls = \"\";\n  imgGroup = shuffle(imgGroup);\n  console.log(imgGroup);\n  return [imgGroup[0], imgGroup[1], imgGroup[2]];\n}\n\nconst Images = () => {\n  const {\n    0: imageState,\n    1: updateImageState\n  } = useState([]);\n  const location = useRouter();\n\n  const imagePile = (category, imgGroup) => {\n    const urls = topThreeImages(imgGroup);\n    console.log({\n      urls\n    });\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      id: \"photo\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"h2\", null, category)), __jsx(\"div\", {\n      id: \"photo-center\"\n    }, __jsx(\"div\", {\n      id: \"small_1\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[0],\n      class: \"img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_2\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[1],\n      class: \" img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_3\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[2],\n      class: \"img-thumbnail rounded\"\n    }))))));\n  };\n\n  useEffect(() => {\n    getImages(updateImageState);\n    console.log(imageState);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"text-center\"\n  }, Object.keys(imageState).length ? __jsx(\"div\", {\n    id: \"main\"\n  }, Object.keys(imageState).map(category => {\n    return imagePile(category, imageState[category]);\n  })) : __jsx(\"div\", null, \"Loading...\"));\n};\n\nconst getImages = async callback => {\n  // let result = await fetch(\"/api/getThumbnails\").then((res) => res.json());\n  let result = await fetch(\"\\/drawingsURLThumb.json\").then(res => res.json());\n  console.log({\n    result\n  });\n  callback(result);\n};\n\nconst Folder = ({\n  match,\n  props\n}) => {\n  const {\n    0: folderState,\n    1: updateFolderState\n  } = useState([]);\n\n  const getFolder = () => {\n    console.log(props.urlList); // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n  useEffect(() => {\n    getImages(updateFolderState);\n  }, []);\n  return __jsx(\"div\", null, folderState);\n};\n\nexport default Images;","map":null,"metadata":{},"sourceType":"module"}