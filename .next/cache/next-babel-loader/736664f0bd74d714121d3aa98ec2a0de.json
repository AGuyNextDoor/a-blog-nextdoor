{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport allTopics from \"../allTopics.js\";\n\nvar listGenerator = function listGenerator(topicName, path) {\n  var topic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  if (!topic) {\n    var _topic = allTopics.filter(function (element) {\n      return path.includes(element);\n    });\n\n    _topic = _topic[0];\n  }\n\n  if (topic.length > 1) {\n    topic = topic[0];\n  }\n\n  var linkUrl = \"/\" + topic + \"/\" + topicName;\n\n  if (linkUrl.includes(\".\") && typeof linkUrl === \"string\" && typeof topicName === \"string\") {\n    var topicTrimmed = topicName.split(\".\").slice(0, -1).join(\".\");\n    topicTrimmed = topicTrimmed.replace(/_/g, \" \");\n    topicTrimmed = topicTrimmed.replace(/-/g, \" \");\n    var pathTrimmed = decodeURI(path);\n    pathTrimmed = pathTrimmed.split(\".\").slice(0, -1).join(\".\");\n    pathTrimmed = pathTrimmed.replace(/_/g, \" \");\n    pathTrimmed = pathTrimmed.replace(/-/g, \" \");\n\n    if (pathTrimmed.includes(topicTrimmed)) {\n      return __jsx(\"li\", {\n        class: \"nav-item flex-fill p-2 sidebar-item active\"\n      }, __jsx(Link, {\n        class: \"nav-link\",\n        key: topic + topicName,\n        href: linkUrl\n      }, topicTrimmed));\n    } else {\n      return __jsx(\"li\", {\n        class: \"nav-item flex-fill p-2 sidebar-item\"\n      }, __jsx(Link, {\n        class: \"nav-link\",\n        key: topic + topicName,\n        href: linkUrl\n      }, topicTrimmed));\n    }\n  } else {\n    if (path.includes(topicName)) {\n      return __jsx(\"li\", {\n        class: \"nav-item flex-fill p-2 sidebar-item active\"\n      }, __jsx(Link, {\n        class: \"nav-link\",\n        key: topic + topicName,\n        href: linkUrl\n      }, topicName));\n    } else {\n      return __jsx(\"li\", {\n        class: \"nav-item flex-fill p-2 sidebar-item\"\n      }, __jsx(Link, {\n        class: \"nav-link\",\n        key: topic + topicName,\n        href: linkUrl\n      }, topicName));\n    }\n  }\n};\n\nvar test = 0;\nvar tested = 0;\n\nvar Sidebar = function Sidebar(_ref) {\n  var match = _ref.match;\n  var location = useRouter();\n\n  var _useState = useState([]),\n      sidebarState = _useState[0],\n      updatesideBarState = _useState[1];\n\n  var flag = true;\n\n  var sidebarContext = function sidebarContext(path) {\n    var topic = allTopics.filter(function (element) {\n      return path.includes(element);\n    });\n    return sidebarState.map(function (element) {\n      return listGenerator(element, path, topic);\n    });\n  };\n\n  var stateUpdate = function stateUpdate(path) {\n    var topic = allTopics.filter(function (element) {\n      return path.includes(element);\n    });\n    console.log({\n      topic: topic\n    });\n\n    switch (topic[0]) {\n      case \"Drawings\":\n        getImagesDir(updatesideBarState);\n        break;\n\n      case \"Articles\":\n        if (test !== 0) {\n          if (tested < 1) {\n            window.location.reload();\n          }\n\n          tested += 1;\n        }\n\n        getList(updatesideBarState);\n        break;\n\n      case \"Reflections\":\n        getReflectionList(updatesideBarState);\n        break;\n\n      default:\n        flag = false;\n        empty(updatesideBarState);\n    }\n  };\n\n  useEffect(function () {\n    stateUpdate(location.pathname);\n    test += 1;\n  }, [location.pathname, flag]);\n  return __jsx(\"div\", {\n    class: \"col-lg bg-light navbar_expand\"\n  }, sidebarState.length !== 0 ? __jsx(\"div\", {\n    class: \"col-lg bg-light flex-wrap second_navbar\"\n  }, __jsx(\"nav\", {\n    class: \"flex-md-nowrap navbar-expand\"\n  }, __jsx(\"ul\", {\n    class: \"navbar-nav sidebar-nav\"\n  }, sidebarState ? sidebarContext(location.pathname) : __jsx(\"div\", {\n    class: \"spinner-grow justify-content-center\",\n    role: \"status\"\n  }, __jsx(\"span\", {\n    class: \"sr-only\"\n  }, \"Loading...\"))))) : __jsx(\"div\", null));\n};\n\nexport default Sidebar;\n\nfunction importAll(r) {\n  return r.keys().map(r);\n}\n\nvar getImagesDir = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n    var folders, keys;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/drawingsURL.json\").then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            folders = _context.sent;\n            keys = Object.keys(folders);\n            return _context.abrupt(\"return\", callback(_toConsumableArray(keys)));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getImagesDir(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getList = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(callback) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // let result = await fetch(\"/articlesURL.json\").then((res) => res.json());\n            // // .then((list) => updateListState(list));\n            // result = result.articles\n            // callback([...result]);\n            // const result = await fetch(\"/tags.json\").then((res) => res.json());\n            // let keysArray = Object.keys(result);\n            callback([]);\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getList(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getReflectionList = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(callback) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"/reflectionsURL.json\").then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            result = _context3.sent;\n            // .then((list) => updateListState(list));\n            result = result.reflections;\n            callback(_toConsumableArray(result));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getReflectionList(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar empty = function empty(callback) {\n  callback([]);\n};","map":null,"metadata":{},"sourceType":"module"}