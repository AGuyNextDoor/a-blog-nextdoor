{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nexport async function allFolder(r = []) {\n  if (r.length !== 0) {\n    r = await getImageDir(getAllImages);\n  }\n\n  let folder = r.map(element => {\n    return element.match(/(?<=\\.)(.*?)(?=\\.)/g)[0];\n  });\n  folder = [...new Set(folder)];\n  folder = folder.filter(r => {\n    if (r) {\n      return r;\n    }\n  });\n  return folder;\n}\nexport const allFolders = allFolder();\n\nfunction topThreeImages(imgGroup) {\n  let category = imgGroup[0];\n  let urls = imgGroup[1]; // result = completeUrl.map((url) => {\n  //   console.log({ url });\n  //   if (url.match(/(?<=\\.)(.*?)(?=\\.)/g)[0] === imgGroup) {\n  //     return url;\n  //   }\n  // });\n  // result = result.filter((url) => {\n  //   if (url) {\n  //     return url;\n  //   }\n  // });\n\n  return urls;\n}\n\nconst getAllImages = element => {\n  return element;\n};\n\nconst getImageDir = async callback => {\n  const folders = await fetch(\"/api/getImagesDir\").then(res => res.json());\n  return callback(folders);\n};\n\nconst Images = ({\n  match\n} = \"\") => {\n  const {\n    0: imageState,\n    1: updateImageState\n  } = useState([]);\n\n  const imagePile = imgGroup => {\n    const urls = topThreeImages(imgGroup);\n    console.log({\n      urls\n    });\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      id: \"photo\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"h2\", null, imgGroup[0])), __jsx(\"div\", {\n      id: \"photo-center\"\n    }, __jsx(\"div\", {\n      id: \"small_1\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[0],\n      class: \"img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_2\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[1],\n      class: \" img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_3\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[2],\n      class: \"img-thumbnail rounded\"\n    }))))));\n  };\n\n  useEffect(() => {\n    getImages(updateImageState); // getImageDir(updateImageState);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"text-center\"\n  }, imageState.length ? __jsx(\"div\", {\n    id: \"main\"\n  }, imageState.map(imgGroup => {\n    console.log({\n      imgGroup\n    });\n    return imagePile(imgGroup);\n  })) : __jsx(\"div\", null, \"Loading...\"), __jsx(Route, {\n    path: `${match.url}/:groupName`,\n    urlList: imageState,\n    component: Folder\n  }));\n};\n\nconst getImages = async callback => {\n  let result = await fetch(\"/api/getThumbnails\").then(res => res.json());\n  callback([...result]);\n};\n\nconst Folder = ({\n  match,\n  props\n}) => {\n  const {\n    0: folderState,\n    1: updateFolderState\n  } = useState([]);\n\n  const getFolder = () => {\n    console.log(props.urlList); // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n  useEffect(() => {\n    getImages(updateFolderState);\n  }, []);\n  return __jsx(\"div\", null, folderState);\n};\n\nexport default Images;","map":null,"metadata":{},"sourceType":"module"}