{"ast":null,"code":"var _jsxFileName = \"/Users/martinvielvoye/a-blog-nextdoor/pages/Drawings/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nimport { useRouter } from \"next/router\"; // import fs from \"fs\";\n\nimport util from \"util\";\nimport getConfig from \"next/config\";\nconst {\n  serverRuntimeConfig\n} = getConfig();\n\nfunction shuffle(a) {\n  let j, x, i;\n\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n}\n\nfunction topThreeImages(imgGroup) {\n  let urls = \"\";\n  imgGroup = shuffle(imgGroup);\n  console.log(imgGroup);\n  return [imgGroup[0], imgGroup[1], imgGroup[2]];\n}\n\nconst getImageDir = async callback => {\n  // const folders = await fetch(\"/api/getImagesDir\").then((res) => res.json());\n  console.log(\"plop\");\n  const folders = await fetch(\"/\").then(res => res.json());\n  console.log({\n    folders\n  });\n  return callback(folders);\n};\n\nconst Images = () => {\n  _s();\n\n  const {\n    0: imageState,\n    1: updateImageState\n  } = useState([]);\n  const location = useRouter();\n\n  const imagePile = (category, imgGroup) => {\n    const urls = topThreeImages(imgGroup);\n    console.log({\n      urls\n    });\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      id: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, category)), __jsx(\"div\", {\n      id: \"photo-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      id: \"small_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[0],\n      class: \"img-thumbnail rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }))), __jsx(\"div\", {\n      id: \"small_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[1],\n      class: \" img-thumbnail rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }))), __jsx(\"div\", {\n      id: \"small_3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[2],\n      class: \"img-thumbnail rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  useEffect(() => {\n    getImages(updateImageState);\n    console.log(imageState);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, Object.keys(imageState).length ? __jsx(\"div\", {\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, Object.keys(imageState).map(category => {\n    return imagePile(category, imageState[category]);\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Loading...\"));\n};\n\n_s(Images, \"VkdzoZJmnNfDmN0i5SpWyw8VvYY=\", false, function () {\n  return [useRouter];\n});\n\n_c = Images;\n\nconst getImages = async callback => {\n  // let result = await fetch(\"/api/getThumbnails\").then((res) => res.json());\n  let result = await fetch(\"/drawingsURLThumb.json\").then(res => res.json());\n  console.log({\n    result\n  });\n  callback(result);\n};\n\nconst Folder = ({\n  match,\n  props\n}) => {\n  _s2();\n\n  const {\n    0: folderState,\n    1: updateFolderState\n  } = useState([]);\n\n  const getFolder = () => {\n    console.log(props.urlList); // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n  useEffect(() => {\n    getImages(updateFolderState);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }, folderState);\n};\n\n_s2(Folder, \"RZDj+J9BWVjtfS3JfHo7ObywgYk=\");\n\n_c2 = Folder;\nexport default Images;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Images\");\n$RefreshReg$(_c2, \"Folder\");","map":{"version":3,"sources":["/Users/martinvielvoye/a-blog-nextdoor/pages/Drawings/index.js"],"names":["React","useState","useEffect","Component","BrowserRouter","Router","Route","Link","ReactDOM","path","useRouter","util","getConfig","serverRuntimeConfig","shuffle","a","j","x","i","length","Math","floor","random","topThreeImages","imgGroup","urls","console","log","getImageDir","callback","folders","fetch","then","res","json","Images","imageState","updateImageState","location","imagePile","category","getImages","Object","keys","map","result","Folder","match","props","folderState","updateFolderState","getFolder","urlList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\"\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nimport { useRouter } from \"next/router\";\n// import fs from \"fs\";\nimport util from \"util\";\nimport getConfig from \"next/config\";\nconst { serverRuntimeConfig } = getConfig();\n\nfunction shuffle(a) {\n  let j, x, i;\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n  return a;\n}\n\nfunction topThreeImages(imgGroup) {\n\n  let urls = \"\"\n  imgGroup = shuffle(imgGroup)\n  console.log(imgGroup)\n\n\n  return [imgGroup[0], imgGroup[1], imgGroup[2]];\n}\n\nconst getImageDir = async (callback) => {\n  // const folders = await fetch(\"/api/getImagesDir\").then((res) => res.json());\n  console.log(\"plop\");\n  const folders = await fetch(\"/\").then((res) => res.json());\n\n  console.log({folders});\n\n  return callback(folders);\n};\n\nconst Images = () => {\n  const [imageState, updateImageState] = useState([]);\n  const location = useRouter()\n\n  const imagePile = (category, imgGroup) => {\n    const urls = topThreeImages(imgGroup);\n\n    console.log({ urls });\n\n    return (\n      <div>\n        <div id=\"photo\">\n          <Link href={\"/Drawings/\" + category}>\n            <h2>{category}</h2>\n          </Link>\n          <div id=\"photo-center\">\n            <div id=\"small_1\">\n              <Link href={\"/Drawings/\" + category}>\n                <img\n                  id=\"copy\"\n                  src={\"/api/drawings/\" + category + \"/thumbnails/\" + urls[0]}\n                  class=\"img-thumbnail rounded\"\n                ></img>\n              </Link>\n            </div>\n            <div id=\"small_2\">\n              <Link href={\"/Drawings/\" + category}>\n                <img\n                  id=\"copy\"\n                  src={\"/api/drawings/\" + category + \"/thumbnails/\" + urls[1]}\n                  class=\" img-thumbnail rounded\"\n                ></img>\n              </Link>\n            </div>\n            <div id=\"small_3\">\n              <Link href={\"/Drawings/\" + category}>\n                <img\n                  id=\"copy\"\n                  src={\"/api/drawings/\" + category + \"/thumbnails/\" + urls[2]}\n                  class=\"img-thumbnail rounded\"\n                ></img>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    getImages(updateImageState);\n    console.log(imageState);\n  }, []);\n\n  return (\n    <div className=\"text-center\">\n      {Object.keys(imageState).length ? (\n        <div id=\"main\">\n          {/* {imageState.map((imgGroup) => {\n            console.log({ imgGroup });\n            return imagePile(imgGroup);\n          })} */}\n          {Object.keys(imageState).map((category) => {\n            return imagePile(category, imageState[category])\n          })}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n      {/* <Route path={`${process.env.URL + location.pathname}/:groupName`} urlList={imageState} component={Folder} /> */}\n    </div>\n  );\n};\n\nconst getImages = async (callback) => {\n  // let result = await fetch(\"/api/getThumbnails\").then((res) => res.json());\n  let result = await fetch(\"/drawingsURLThumb.json\").then((res) => res.json());\n  console.log({result})\n\n  callback(result);\n};\n\nconst Folder = ({ match, props }) => {\n  const [folderState, updateFolderState] = useState([]);\n\n  const getFolder = () => {\n    console.log(props.urlList);\n    // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n\n  useEffect(() => {\n    getImages(updateFolderState);\n  }, []);\n\n  return <div>{folderState}</div>;\n};\n\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}