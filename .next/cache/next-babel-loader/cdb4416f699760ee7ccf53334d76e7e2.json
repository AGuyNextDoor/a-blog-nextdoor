{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nimport { useRouter } from \"next/router\"; // import fs from \"fs\";\n\nimport util from \"util\";\nimport getConfig from \"next/config\";\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig;\n\nfunction shuffle(a) {\n  var j, x, i;\n\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n}\n\nfunction topThreeImages(imgGroup) {\n  var urls = \"\";\n  imgGroup = shuffle(imgGroup);\n  console.log(imgGroup);\n  return [imgGroup[0], imgGroup[1], imgGroup[2]];\n}\n\nvar getImageDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n    var folders;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const folders = await fetch(\"/api/getImagesDir\").then((res) => res.json());\n            console.log(\"plop\");\n            _context.next = 3;\n            return fetch(\"/\").then(function (res) {\n              return res.json();\n            });\n\n          case 3:\n            folders = _context.sent;\n            console.log({\n              folders: folders\n            });\n            return _context.abrupt(\"return\", callback(folders));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getImageDir(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Images = function Images() {\n  var _useState = useState([]),\n      imageState = _useState[0],\n      updateImageState = _useState[1];\n\n  var location = useRouter();\n\n  var imagePile = function imagePile(category, imgGroup) {\n    var urls = topThreeImages(imgGroup);\n    console.log({\n      urls: urls\n    });\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      id: \"photo\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"h2\", null, category)), __jsx(\"div\", {\n      id: \"photo-center\"\n    }, __jsx(\"div\", {\n      id: \"small_1\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[0],\n      class: \"img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_2\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[1],\n      class: \" img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_3\"\n    }, __jsx(Link, {\n      href: \"/Drawings/\" + category\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/api/drawings/\" + category + \"/thumbnails/\" + urls[2],\n      class: \"img-thumbnail rounded\"\n    }))))));\n  };\n\n  useEffect(function () {\n    getImages(updateImageState);\n    console.log(imageState);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"text-center\"\n  }, Object.keys(imageState).length ? __jsx(\"div\", {\n    id: \"main\"\n  }, Object.keys(imageState).map(function (category) {\n    return imagePile(category, imageState[category]);\n  })) : __jsx(\"div\", null, \"Loading...\"));\n};\n\nvar getImages = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(callback) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/drawingsURLThumb.json\").then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            result = _context2.sent;\n            console.log({\n              result: result\n            });\n            callback(result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getImages(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar Folder = function Folder(_ref3) {\n  var match = _ref3.match,\n      props = _ref3.props;\n\n  var _useState2 = useState([]),\n      folderState = _useState2[0],\n      updateFolderState = _useState2[1];\n\n  var getFolder = function getFolder() {\n    console.log(props.urlList); // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n  useEffect(function () {\n    getImages(updateFolderState);\n  }, []);\n  return __jsx(\"div\", null, folderState);\n};\n\nexport default Images;","map":null,"metadata":{},"sourceType":"module"}