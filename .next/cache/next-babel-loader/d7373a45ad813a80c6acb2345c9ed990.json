{"ast":null,"code":"var _jsxFileName = \"/Users/martinvielvoye/a-blog-nextdoor/pages/Reflections/[reflection_name].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nimport Image from \"next/image\";\nimport ReactDOM from \"react-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport showdown from \"showdown\";\nconst converter = new showdown.Converter(); // import path from \"path\";\n\nconst Reflection = () => {\n  _s();\n\n  const {\n    0: reflectionState,\n    1: updateReflectionState\n  } = useState();\n  const router = useRouter();\n  let {\n    reflection_name\n  } = router.query; // Retrieves the list of items from the Express app\n\n  let title = \"Loading...\";\n\n  const getReflection = () => {\n    if (!reflection_name) {\n      router.push(\"/Reflections\");\n    } else {\n      fetch(\"/api/reflections/\" + reflection_name).then(res => {\n        return res.text();\n      }).then(data => {\n        updateReflectionState(converter.makeHtml(data));\n      });\n    }\n  };\n\n  useEffect(() => {\n    getReflection();\n\n    if (!reflection_name) {\n      router.push(\"/Reflections\");\n    }\n  }, [reflectionState, title, reflection_name]);\n  getReflection();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, reflectionState ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, ReactHtmlParser(reflectionState)) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Reflection, \"zngVoRGIE/qGU7QUGy9t0nh86vU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Reflection;\nexport default Reflection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reflection\");","map":{"version":3,"sources":["/Users/martinvielvoye/a-blog-nextdoor/pages/Reflections/[reflection_name].js"],"names":["React","useState","useEffect","Component","BrowserRouter","Router","Link","useRouter","Image","ReactDOM","ReactHtmlParser","showdown","converter","Converter","Reflection","reflectionState","updateReflectionState","router","reflection_name","query","title","getReflection","push","fetch","then","res","text","data","makeHtml"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,SAAS,GAAG,IAAID,QAAQ,CAACE,SAAb,EAAlB,C,CAEA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAA,OAACC,eAAD;AAAA,OAAkBC;AAAlB,MAA2Cf,QAAQ,EAAzD;AACA,QAAMgB,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAI;AAAEW,IAAAA;AAAF,MAAsBD,MAAM,CAACE,KAAjC,CAHuB,CAOvB;;AACA,MAAIC,KAAK,GAAG,YAAZ;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAG,CAAEH,eAAL,EAAsB;AACpBD,MAAAA,MAAM,CAACK,IAAP,CAAY,cAAZ;AACD,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,sBAAsBL,eAAvB,CAAL,CACGM,IADH,CACSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdX,QAAAA,qBAAqB,CAACJ,SAAS,CAACgB,QAAV,CAAmBD,IAAnB,CAAD,CAArB;AACD,OANH;AAOD;AACF,GAZD;;AAcAzB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,aAAa;;AACb,QAAI,CAACH,eAAL,EAAsB;AACpBD,MAAAA,MAAM,CAACK,IAAP,CAAY,cAAZ;AACD;AACF,GALQ,EAKN,CAACP,eAAD,EAAkBK,KAAlB,EAAyBF,eAAzB,CALM,CAAT;AAOAG,EAAAA,aAAa;AAEb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,eAAe,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGL,eAAe,CAACK,eAAD,CAFlB,CADc,GAOd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF;AAaD,CA7CD;;GAAMD,U;UAEWP,S;;;KAFXO,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nimport Image from \"next/image\";\nimport ReactDOM from \"react-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport showdown from \"showdown\"\n\nconst converter = new showdown.Converter();\n\n// import path from \"path\";\n\nconst Reflection = () => {\n  const [reflectionState, updateReflectionState] = useState();\n  const router = useRouter()\n  let { reflection_name } = router.query\n\n  \n\n  // Retrieves the list of items from the Express app\n  let title = \"Loading...\";\n  const getReflection = () => {\n    if(!(reflection_name)){\n      router.push(\"/Reflections\")\n    } else {\n      fetch(\"/api/reflections/\" + reflection_name)\n        .then((res) => {\n          return res.text();\n        })\n        .then((data) => {\n          updateReflectionState(converter.makeHtml(data));\n        });\n    }\n  };\n\n  useEffect(() => {\n    getReflection();\n    if (!reflection_name) {\n      router.push(\"/Reflections\");\n    }\n  }, [reflectionState, title, reflection_name]);\n\n  getReflection();\n\n  return (\n    <div>\n      {reflectionState ? (\n        <div>\n          {/* <div dangerouslySetInnerHTML={{ __html: reflectionState }} /> */}\n          {ReactHtmlParser(reflectionState)}\n          {/* {reflectionState} */}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Reflection\n"]},"metadata":{},"sourceType":"module"}