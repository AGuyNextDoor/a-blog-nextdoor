{"ast":null,"code":"var _jsxFileName = \"/Users/martinvielvoye/a-blog-nextdoor/client/pages/App.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport IterButton from \"../components/button\";\nimport Navbar from \"../components/navbar\";\nimport Reflections from \"./Reflections\";\nimport Home from \"./home\";\nimport Articles from \"./Articles\";\nimport Images from \"./Images\";\nimport Folder from \"./Folders\";\nimport Drawings from \"./Drawings\";\nimport marked from \"marked\";\nimport Sidebar from \"../components/sidebar\"; // import \"./index.css\";\n// export function allFolder(r) {\n//   let folder = r.map((element) => {\n//     return element.match(/(?<=\\.)(.*?)(?=\\.)/g)[0];\n//   });\n//   folder = [...new Set(folder)];\n//   folder = folder.filter((r) => {\n//     if (r) {\n//       return r;\n//     }\n//   });\n//   return folder;\n// }\n// function importAll(r) {\n//   return r.keys().map(r);\n// }\n// const getFolder = () => {\n//   const completeUrl = importAll(require.context(\"../images/\", false, /\\.(png|jpe?g|svg)$/));\n//   // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n//   return completeUrl;\n// };\n\nfunction App() {\n  return __jsx(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Route, {\n    path: [\"/\", \"/Home\"],\n    component: Navbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    class: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(Route, {\n    path: [\"/\", \"/Home\"],\n    component: Sidebar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), __jsx(\"main\", {\n    role: \"main\",\n    class: \"col-md-9 ml-sm-auto col-lg-10 px-md-4 text-justify\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(Route, {\n    exact: true,\n    path: [\"/\", \"/Home\"],\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(Route, {\n    path: \"/Articles\",\n    component: Articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(Route, {\n    path: \"/Reflections\",\n    component: Reflections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(Route, {\n    exact: true,\n    path: [\"/Drawings\", \"/Drawings/\"],\n    component: Images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(Route, {\n    path: [\"/Drawings/:folderName\", \"/Drawings/:folderName/\"],\n    component: Folder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_c = App;\nexport default _c2 = withRouter(App); // export default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/martinvielvoye/a-blog-nextdoor/client/pages/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","Switch","withRouter","IterButton","Navbar","Reflections","Home","Articles","Images","Folder","Drawings","marked","Sidebar","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,MAA/C,EAAuDC,UAAvD,QAAyE,kBAAzE;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,CAAb;AAA6B,IAAA,SAAS,EAAET,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,CAAb;AAA6B,IAAA,SAAS,EAAEQ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAC,oDAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,CAAnB;AAAmC,IAAA,SAAS,EAAEN,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAA2B,IAAA,SAAS,EAAEF,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAE,CAAC,WAAD,EAAc,YAAd,CAAnB;AAAgD,IAAA,SAAS,EAAEG,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE,CAAC,uBAAD,EAA0B,wBAA1B,CAAb;AAAkE,IAAA,SAAS,EAAEC,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADF,CAJF,CADF;AAmBD;;KApBQI,G;AAsBT,qBAAeX,UAAU,CAACW,GAAD,CAAzB,C,CACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport IterButton from \"../components/button\";\nimport Navbar from \"../components/navbar\";\nimport Reflections from \"./Reflections\";\nimport Home from \"./home\";\nimport Articles from \"./Articles\";\nimport Images from \"./Images\";\nimport Folder from \"./Folders\";\nimport Drawings from \"./Drawings\";\nimport marked from \"marked\";\nimport Sidebar from \"../components/sidebar\";\n// import \"./index.css\";\n\n\n// export function allFolder(r) {\n//   let folder = r.map((element) => {\n//     return element.match(/(?<=\\.)(.*?)(?=\\.)/g)[0];\n//   });\n\n//   folder = [...new Set(folder)];\n\n//   folder = folder.filter((r) => {\n//     if (r) {\n//       return r;\n//     }\n//   });\n\n//   return folder;\n// }\n\n// function importAll(r) {\n//   return r.keys().map(r);\n// }\n\n// const getFolder = () => {\n//   const completeUrl = importAll(require.context(\"../images/\", false, /\\.(png|jpe?g|svg)$/));\n//   // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n//   return completeUrl;\n// };\n\nfunction App() {\n  return (\n    <body>\n      <header>\n        <Route path={[\"/\", \"/Home\"]} component={Navbar} />\n      </header>\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <Route path={[\"/\", \"/Home\"]} component={Sidebar} />\n          <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4 text-justify\">\n            <Route exact path={[\"/\", \"/Home\"]} component={Home} />\n            <Route path=\"/Articles\" component={Articles} />\n            <Route path=\"/Reflections\" component={Reflections} />\n            <Route exact path={[\"/Drawings\", \"/Drawings/\"]} component={Images} />\n            <Route path={[\"/Drawings/:folderName\", \"/Drawings/:folderName/\"]} component={Folder} />\n          </main>\n        </div>\n      </div>\n    </body>\n  );\n}\n\nexport default withRouter(App);\n// export default App;\n"]},"metadata":{},"sourceType":"module"}