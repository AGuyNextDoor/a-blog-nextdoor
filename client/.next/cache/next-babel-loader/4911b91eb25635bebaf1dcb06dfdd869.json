{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport path from \"path\";\nexport function allFolder() {\n  return _allFolder.apply(this, arguments);\n}\n\nfunction _allFolder() {\n  _allFolder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var r,\n        folder,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            r = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];\n\n            if (!(r.length !== 0)) {\n              _context3.next = 5;\n              break;\n            }\n\n            _context3.next = 4;\n            return getImageDir(getAllImages);\n\n          case 4:\n            r = _context3.sent;\n\n          case 5:\n            folder = r.map(function (element) {\n              return element.match(/(?<=\\.)(.*?)(?=\\.)/g)[0];\n            });\n            folder = _toConsumableArray(new Set(folder));\n            folder = folder.filter(function (r) {\n              if (r) {\n                return r;\n              }\n            });\n            return _context3.abrupt(\"return\", folder);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _allFolder.apply(this, arguments);\n}\n\nexport var allFolders = allFolder();\n\nfunction topThreeImages(imgGroup) {\n  var category = imgGroup[0];\n  var urls = imgGroup[1]; // result = completeUrl.map((url) => {\n  //   console.log({ url });\n  //   if (url.match(/(?<=\\.)(.*?)(?=\\.)/g)[0] === imgGroup) {\n  //     return url;\n  //   }\n  // });\n  // result = result.filter((url) => {\n  //   if (url) {\n  //     return url;\n  //   }\n  // });\n\n  return urls;\n}\n\nvar getAllImages = function getAllImages(element) {\n  return element;\n};\n\nvar getImageDir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n    var folders;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/getImagesDir\").then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            folders = _context.sent;\n            return _context.abrupt(\"return\", callback(folders));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getImageDir(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Images = function Images() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\",\n      match = _ref2.match;\n\n  var _useState = useState([]),\n      imageState = _useState[0],\n      updateImageState = _useState[1];\n\n  var imagePile = function imagePile(imgGroup) {\n    var urls = topThreeImages(imgGroup);\n    console.log({\n      urls: urls\n    });\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      id: \"photo\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"h2\", null, imgGroup[0])), __jsx(\"div\", {\n      id: \"photo-center\"\n    }, __jsx(\"div\", {\n      id: \"small_1\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[0],\n      class: \"img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_2\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[1],\n      class: \" img-thumbnail rounded\"\n    }))), __jsx(\"div\", {\n      id: \"small_3\"\n    }, __jsx(Link, {\n      to: \"/Drawings/\" + imgGroup[0]\n    }, __jsx(\"img\", {\n      id: \"copy\",\n      src: \"/drawings/\" + imgGroup[0] + \"/thumbnails/\" + urls[2],\n      class: \"img-thumbnail rounded\"\n    }))))));\n  };\n\n  useEffect(function () {\n    getImages(updateImageState); // getImageDir(updateImageState);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"text-center\"\n  }, imageState.length ? __jsx(\"div\", {\n    id: \"main\"\n  }, imageState.map(function (imgGroup) {\n    console.log({\n      imgGroup: imgGroup\n    });\n    return imagePile(imgGroup);\n  })) : __jsx(\"div\", null, \"Loading...\"), __jsx(Route, {\n    path: \"\".concat(match.url, \"/:groupName\"),\n    urlList: imageState,\n    component: Folder\n  }));\n};\n\nvar getImages = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(callback) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/api/getThumbnails\").then(function (res) {\n              return res.json();\n            });\n\n          case 2:\n            result = _context2.sent;\n            callback(_toConsumableArray(result));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getImages(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar Folder = function Folder(_ref4) {\n  var match = _ref4.match,\n      props = _ref4.props;\n\n  var _useState2 = useState([]),\n      folderState = _useState2[0],\n      updateFolderState = _useState2[1];\n\n  var getFolder = function getFolder() {\n    console.log(props.urlList); // const uploadsDirectory = path.join(__dirname, \"../../images/\");\n    // const completeUrl = importAll(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/));\n    // const completeFolder = allFolder(require.context(\"../../images/\", false, /\\.(png|jpe?g|svg)$/)));\n\n    getImages(props.urlList);\n  };\n\n  getFolder();\n  useEffect(function () {\n    getImages(updateFolderState);\n  }, []);\n  return __jsx(\"div\", null, folderState);\n};\n\nexport default Images;","map":null,"metadata":{},"sourceType":"module"}