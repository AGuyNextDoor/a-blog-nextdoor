{"ast":null,"code":"var _jsxFileName = \"/Users/martinvielvoye/a-blog-nextdoor/client/pages/Reflections/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nconst Reflections = ({\n  match\n}) => {\n  const location = userRouter();\n  const {\n    0: listState,\n    1: updateListState\n  } = useState([]);\n\n  const getList = () => {\n    fetch(\"/api/getReflectionList\").then(res => res.json()).then(list => updateListState(list));\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    class: \"navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, location.pathname.length < 13 ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, \"Choose your article on the sidebar\"))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), __jsx(Route, {\n    path: `${match.url}/:reflectionId`,\n    component: Reflection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Reflection = ({\n  match\n}) => {\n  const {\n    0: reflectionState,\n    1: updateReflectionState\n  } = useState(); // Retrieves the list of items from the Express app\n\n  let title = \"Loading...\";\n\n  const getReflection = () => {\n    fetch(\"/api/getReflection/\" + match.params.reflectionId).then(res => {\n      return res.json();\n    }).then(data => {\n      title = match.params.reflectionId;\n      updateReflectionState(data[1]);\n    });\n  };\n\n  useEffect(() => {\n    getReflection();\n  }, [reflectionState, title, match.params.reflectionId]);\n  getReflection();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, reflectionState ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, ReactHtmlParser(reflectionState)) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Reflections;","map":{"version":3,"sources":["/Users/martinvielvoye/a-blog-nextdoor/client/pages/Reflections/index.js"],"names":["React","useState","useEffect","Component","useRouter","BrowserRouter","Router","Route","Link","ReactHtmlParser","Reflections","match","location","userRouter","listState","updateListState","getList","fetch","then","res","json","list","pathname","length","url","Reflection","reflectionState","updateReflectionState","title","getReflection","params","reflectionId","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,QAAMC,QAAQ,GAAGC,UAAU,EAA3B;AACA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA+Bd,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMe,OAAO,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,wBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUN,eAAe,CAACM,IAAD,CAFjC;AAGD,GAJD;;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACU,QAAT,CAAkBC,MAAlB,GAA2B,EAA3B,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF,CADD,GAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,EAYE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEZ,KAAK,CAACa,GAAI,gBAA1B;AAA2C,IAAA,SAAS,EAAEC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CA9BD;;AAgCA,MAAMA,UAAU,GAAG,CAAC;AAAEd,EAAAA;AAAF,CAAD,KAAe;AAChC,QAAM;AAAA,OAACe,eAAD;AAAA,OAAkBC;AAAlB,MAA2C1B,QAAQ,EAAzD,CADgC,CAGhC;;AACA,MAAI2B,KAAK,GAAG,YAAZ;;AACA,QAAMC,aAAa,GAAG,MAAM;AAC1BZ,IAAAA,KAAK,CAAC,wBAAwBN,KAAK,CAACmB,MAAN,CAAaC,YAAtC,CAAL,CACGb,IADH,CACSC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAISc,IAAD,IAAU;AACdJ,MAAAA,KAAK,GAAGjB,KAAK,CAACmB,MAAN,CAAaC,YAArB;AACAJ,MAAAA,qBAAqB,CAACK,IAAI,CAAC,CAAD,CAAL,CAArB;AACD,KAPH;AAQD,GATD;;AAWA9B,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACH,eAAD,EAAkBE,KAAlB,EAAyBjB,KAAK,CAACmB,MAAN,CAAaC,YAAtC,CAFM,CAAT;AAIAF,EAAAA,aAAa;AAEb,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,eAAe,GACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGjB,eAAe,CAACiB,eAAD,CAFlB,CADc,GAMd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYD,CAlCD;;AAoCA,eAAehB,WAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport ReactHtmlParser from \"react-html-parser\";\n\n\nconst Reflections = ({ match }) => {\n  const location = userRouter();\n  const [listState, updateListState] = useState([]);\n\n  const getList = () => {\n    fetch(\"/api/getReflectionList\")\n      .then((res) => res.json())\n      .then((list) => updateListState(list));\n  };\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  return (\n    <div>\n      <ul class=\"navbar-nav\">\n        {location.pathname.length < 13 ? (\n          <div>\n            <ul>\n              <li>Choose your article on the sidebar</li>\n            </ul>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </ul>\n      <Route path={`${match.url}/:reflectionId`} component={Reflection} />\n    </div>\n  );\n};\n\nconst Reflection = ({ match }) => {\n  const [reflectionState, updateReflectionState] = useState();\n\n  // Retrieves the list of items from the Express app\n  let title = \"Loading...\";\n  const getReflection = () => {\n    fetch(\"/api/getReflection/\" + match.params.reflectionId)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        title = match.params.reflectionId;\n        updateReflectionState(data[1]);\n      });\n  };\n\n  useEffect(() => {\n    getReflection();\n  }, [reflectionState, title, match.params.reflectionId]);\n\n  getReflection();\n\n  return (\n    <div>\n      {reflectionState ? (\n        <div>\n          {/* <div dangerouslySetInnerHTML={{ __html: reflectionState }} /> */}\n          {ReactHtmlParser(reflectionState)}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Reflections;\n"]},"metadata":{},"sourceType":"module"}