{"ast":null,"code":"var _jsxFileName = \"/Users/martinvielvoye/a-blog-nextdoor/client/pages/Articles/[article_name].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { useRouter } from \"next/router\";\n\nconst Article = () => {\n  _s();\n\n  const {\n    0: articleState,\n    1: updateArticleState\n  } = useState();\n  const match = {\n    params: {\n      articleId: 5\n    }\n  }; // Retrieves the list of items from the Express app\n\n  let title = \"Loading...\";\n\n  const getArticle = () => {\n    fetch(\"/api/getArticle/\" + match.params.articleId).then(res => {\n      return res.json();\n    }).then(data => {\n      title = match.params.articleId;\n      updateArticleState(data[1]);\n    });\n  };\n\n  useEffect(() => {\n    getArticle();\n  }, [articleState, title, match.params.articleId]);\n  getArticle();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, articleState ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, ReactHtmlParser(articleState)) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Article, \"5ORQwiVkidmmTaidHsP0E3cQqac=\");\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["/Users/martinvielvoye/a-blog-nextdoor/client/pages/Articles/[article_name].js"],"names":["React","useState","useEffect","Component","BrowserRouter","Router","Route","Link","ReactHtmlParser","useRouter","Article","articleState","updateArticleState","match","params","articleId","title","getArticle","fetch","then","res","json","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAqCX,QAAQ,EAAnD;AAEA,QAAMY,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL;AADI,GAAd,CAHoB,CASpB;;AACA,MAAIC,KAAK,GAAG,YAAZ;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,qBAAqBL,KAAK,CAACC,MAAN,CAAaC,SAAnC,CAAL,CACGI,IADH,CACSC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdN,MAAAA,KAAK,GAAGH,KAAK,CAACC,MAAN,CAAaC,SAArB;AACAH,MAAAA,kBAAkB,CAACU,IAAI,CAAC,CAAD,CAAL,CAAlB;AACD,KAPH;AAQD,GATD;;AAWApB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACN,YAAD,EAAeK,KAAf,EAAsBH,KAAK,CAACC,MAAN,CAAaC,SAAnC,CAFM,CAAT;AAIAE,EAAAA,UAAU;AAEV,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGH,eAAe,CAACG,YAAD,CAFlB,CADW,GAMX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAYD,CAxCD;;GAAMD,O;;KAAAA,O;AA0CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Link from \"next/link\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { useRouter } from \"next/router\";\n\nconst Article = () => {\n  const [articleState, updateArticleState] = useState();\n\n  const match = {\n    params: {\n      articleId: 5,\n    },\n  };\n\n  // Retrieves the list of items from the Express app\n  let title = \"Loading...\";\n  const getArticle = () => {\n    fetch(\"/api/getArticle/\" + match.params.articleId)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        title = match.params.articleId;\n        updateArticleState(data[1]);\n      });\n  };\n\n  useEffect(() => {\n    getArticle();\n  }, [articleState, title, match.params.articleId]);\n\n  getArticle();\n\n  return (\n    <div>\n      {articleState ? (\n        <div>\n          {/* <div dangerouslySetInnerHTML={{ __html: articleState }} /> */}\n          {ReactHtmlParser(articleState)}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Article\n"]},"metadata":{},"sourceType":"module"}